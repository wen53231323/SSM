<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 自动扫描控制层Controller组件和数据访问层Dao组件 -->
    <context:component-scan base-package="Controller"/>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀：跳转到/WEB-INF/templates/路径下某页面-->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀：匹配以.html结尾的页面 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--
        视图控制器：为当前的请求，直接设置路由名称实现页面跳转
        path：设置处理的请求地址
        view-name：设置请求地址所对应的视图名称
    -->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>

    <!-- 开启mvc的注解驱动 -->
    <!--当SpringMVC中设置任何一个view-controller时，其他控制器中的请求映射将全部失效-->
    <!--此时需要在SpringMVC的核心配置文件中设置开启mvc注解驱动的标签-->
    <mvc:annotation-driven/>

    <!-- 配置默认的servlet处理静态资源，开放对静态资源的访问 -->
    <mvc:default-servlet-handler/>

    <!--文件解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

    <!-- 方式一：使用全类名配置拦截器 -->
    <mvc:interceptors>
        <bean class="interceptor.FirstInterceptor"/>
        <bean class="interceptor.SecondInterceptor"/>
    </mvc:interceptors>




</beans>

